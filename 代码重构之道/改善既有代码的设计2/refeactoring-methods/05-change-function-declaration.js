// 改变函数声明

// 函数名：先写一句注释描述这个函数的用途，再把这句注释变成函数的名字
// 函数参数：修改参数列表不仅能增加函数的应用范围，还能改变连接一个模块所需的条件，从而去除不必要的耦合 


// 迁移式做法

// 如果有必要的话，先对函数体内部加以重构，使后面的提炼步骤易于开展。
// 使用 提炼函数 将函数体提炼成一个新函数。

// Tip
// 如果你打算沿用旧函数的名字，可以先给新函数起一个易于搜索的临时名字。

// 测试。
// 对旧函数使用 内联函数（115）。
// 如果新函数使用了临时的名字，再次使用改变函数声明（124）将其改回原来的名字。
// 测试。

// JS：一个具有多态性的类

// 理解：JS中的多态性？

// OOP的原则之一。是设计对象以共享行为并能够用特定的行为覆盖共享行为的实践。多态利用继承来实现。




